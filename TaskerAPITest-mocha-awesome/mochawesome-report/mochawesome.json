{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-02T16:31:31.276Z",
    "end": "2022-07-02T16:31:34.323Z",
    "duration": 3047,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7242e1b8-f701-4cb6-af4d-dfc41545291b",
      "title": "",
      "fullFile": "C:\\Users\\leeba\\src\\TaskerApplication\\mocha-awesome-TaskerAPITest\\test\\taskerTest.js",
      "file": "\\test\\taskerTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
          "title": "Tasker Test",
          "fullFile": "C:\\Users\\leeba\\src\\TaskerApplication\\mocha-awesome-TaskerAPITest\\test\\taskerTest.js",
          "file": "\\test\\taskerTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check Server is live",
              "fullTitle": "Tasker Test Check Server is live",
              "timedOut": false,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Simple check of the server\nchai.request(baseUrl)\n.get('/list')\n.end(function (err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    done();\n})",
              "err": {},
              "uuid": "21bb0a3c-2271-4adb-a462-e77464b574a7",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a new a new task: POST - /save",
              "fullTitle": "Tasker Test Create a new a new task: POST - /save",
              "timedOut": false,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Check if can save new task\nchai.request(baseUrl)\n.post('/save')\n.send({\n    taskDescription: des,\n\t        taskDate: tdate\n})\n.end(function (err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"id\");\n    createId = res.body.id;\n    done();\n})",
              "err": {},
              "uuid": "a554985f-adb8-4c8d-bf00-5e59d227c3b1",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find the created task: GET - /get/{id}",
              "fullTitle": "Tasker Test Find the created task: GET - /get/{id}",
              "timedOut": false,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if can get task by id\nchai.request(baseUrl)\n.get('/get/'+createId)\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"id\");\n    expect(res.body.taskDescription).to.equal(des);\n    expect(res.body.taskDate).to.equal(tdate);\n    expect(res.body.taskCompleted).to.equal(false);\n    done();\n})",
              "err": {},
              "uuid": "2d0dd78f-1449-4cba-a6b9-6e3738badd67",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a 2nd task: POST - /save",
              "fullTitle": "Tasker Test Create a 2nd task: POST - /save",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Check if can save new task (2nd task)\nchai.request(baseUrl)\n.post('/save')\n.send({\n    taskDescription: des2,\n\t        taskDate: tdate2\n})\n.end(function (err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"id\");\n    createId2 = res.body.id;\n    done();\n})",
              "err": {},
              "uuid": "7ba1ab8c-084e-44a2-93e5-98dcb277dff2",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get list of task: GET - /list",
              "fullTitle": "Tasker Test Get list of task: GET - /list",
              "timedOut": false,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.get('/list')\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res.body).to.be.an(\"array\");\n    const task1 = res.body.find(t => t.id == createId);\n    expect(task1).to.be.an(\"object\");\n    expect(task1.taskDescription).to.equal(des);\n    const task2 = res.body.find(t=> t.id==createId2);\n    expect(task2).to.be.an(\"object\");\n    expect(task2.taskDescription).to.equal(des2);\n    done();\n})",
              "err": {},
              "uuid": "cdb2c93a-8953-4b13-a5db-7cd47953f588",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Modify the taskCompleted status: POST - /save",
              "fullTitle": "Tasker Test Modify the taskCompleted status: POST - /save",
              "timedOut": false,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.post('/save')\n.send({\n    id: createId2,\n    taskDescription: des2,\n\t        taskDate: tdate2,\n    taskCompleted: true\n})\n.end(function(err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"taskCompleted\");\n    expect(res.body.taskCompleted).to.equal(true);\n    done();\n})",
              "err": {},
              "uuid": "93829ca6-2cf0-400e-8d2f-091632d563a2",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete completed task: DELETE - /clear",
              "fullTitle": "Tasker Test Delete completed task: DELETE - /clear",
              "timedOut": false,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.delete('/clear')\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    done();\n})",
              "err": {},
              "uuid": "f8017acc-7485-4d49-bbd1-23fd94180ef8",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the task has been deleted",
              "fullTitle": "Tasker Test Verify that the task has been deleted",
              "timedOut": false,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.get('/get/'+createId2)\n.end(function(err,res){\n    expect(res).to.have.status(400);\n    done();\n})",
              "err": {},
              "uuid": "1ae70d0c-7d12-4c20-b3bc-4f233cbba623",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clean up the data - set to completed",
              "fullTitle": "Tasker Test Clean up the data - set to completed",
              "timedOut": false,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.post('/save')\n.send({\n    id: createId,\n    taskDescription: des,\n\t        taskDate: tdate,\n    taskCompleted: true\n})\n.end(function(err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"taskCompleted\");\n    expect(res.body.taskCompleted).to.equal(true);\n    done();\n})",
              "err": {},
              "uuid": "ca8f86c2-1a37-43bf-b69e-8f259dd8c1aa",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clean up the data - delete completed",
              "fullTitle": "Tasker Test Clean up the data - delete completed",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.delete('/clear')\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    done();\n})",
              "err": {},
              "uuid": "fb03e114-ba44-4bcd-ad60-e04885ccb48a",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clean up the data - verify deletion",
              "fullTitle": "Tasker Test Clean up the data - verify deletion",
              "timedOut": false,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.get('/get/'+createId)\n.end(function(err,res){\n    expect(res).to.have.status(400);\n    done();\n})",
              "err": {},
              "uuid": "c44cc39a-701f-4d47-ad22-7d110b471b9f",
              "parentUUID": "97d2eeff-315a-49c1-a2b0-548cb5913d33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21bb0a3c-2271-4adb-a462-e77464b574a7",
            "a554985f-adb8-4c8d-bf00-5e59d227c3b1",
            "2d0dd78f-1449-4cba-a6b9-6e3738badd67",
            "7ba1ab8c-084e-44a2-93e5-98dcb277dff2",
            "cdb2c93a-8953-4b13-a5db-7cd47953f588",
            "93829ca6-2cf0-400e-8d2f-091632d563a2",
            "f8017acc-7485-4d49-bbd1-23fd94180ef8",
            "1ae70d0c-7d12-4c20-b3bc-4f233cbba623",
            "ca8f86c2-1a37-43bf-b69e-8f259dd8c1aa",
            "fb03e114-ba44-4bcd-ad60-e04885ccb48a",
            "c44cc39a-701f-4d47-ad22-7d110b471b9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}