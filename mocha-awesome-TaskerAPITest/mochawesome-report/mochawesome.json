{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-02T04:06:31.350Z",
    "end": "2022-07-02T04:06:31.448Z",
    "duration": 98,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5fab0988-8b92-40c7-9c9a-12ddafc6f6b5",
      "title": "",
      "fullFile": "C:\\Users\\leeba\\restAPITesting\\TaskerAPITesting\\mocha-awesome\\test\\taskerTest.js",
      "file": "\\test\\taskerTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33773cb2-2631-437b-8fb0-a24b453acb78",
          "title": "Tasker Test",
          "fullFile": "C:\\Users\\leeba\\restAPITesting\\TaskerAPITesting\\mocha-awesome\\test\\taskerTest.js",
          "file": "\\test\\taskerTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check Server is live",
              "fullTitle": "Tasker Test Check Server is live",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Simple check of the server\nchai.request(baseUrl)\n.get('/list')\n.end(function (err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    done();\n})",
              "err": {},
              "uuid": "930c75d5-9fef-413d-bba4-d7bff88ad6e3",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a new a new task: POST - /save",
              "fullTitle": "Tasker Test Create a new a new task: POST - /save",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Check if can save new task\nchai.request(baseUrl)\n.post('/save')\n.send({\n    taskDescription: des,\n\t        taskDate: tdate\n})\n.end(function (err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"id\");\n    createId = res.body.id;\n    done();\n})",
              "err": {},
              "uuid": "8c2e63e2-ce7a-4e14-85e8-9586ca9f3a28",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Find the created task: GET - /get/{id}",
              "fullTitle": "Tasker Test Find the created task: GET - /get/{id}",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if can get task by id\nchai.request(baseUrl)\n.get('/get/'+createId)\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"id\");\n    expect(res.body.taskDescription).to.equal(des);\n    expect(res.body.taskDate).to.equal(tdate);\n    expect(res.body.taskCompleted).to.equal(false);\n    done();\n})",
              "err": {},
              "uuid": "3249ac1b-adf6-41e2-a7ef-a49563303263",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a 2nd task: POST - /save",
              "fullTitle": "Tasker Test Create a 2nd task: POST - /save",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Check if can save new task (2nd task)\nchai.request(baseUrl)\n.post('/save')\n.send({\n    taskDescription: des2,\n\t        taskDate: tdate2\n})\n.end(function (err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"id\");\n    createId2 = res.body.id;\n    done();\n})",
              "err": {},
              "uuid": "db4c3507-da72-4ed6-a863-d45ffc77040f",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get list of task: GET - /list",
              "fullTitle": "Tasker Test Get list of task: GET - /list",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.get('/list')\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res.body).to.be.an(\"array\");\n    const task1 = res.body.find(t => t.id == createId);\n    expect(task1).to.be.an(\"object\");\n    expect(task1.taskDescription).to.equal(des);\n    const task2 = res.body.find(t=> t.id==createId2);\n    expect(task2).to.be.an(\"object\");\n    expect(task2.taskDescription).to.equal(des2);\n    done();\n})",
              "err": {},
              "uuid": "5c6c501f-2b04-4bc6-9870-05ea46defe39",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Modify the taskCompleted status: POST - /save",
              "fullTitle": "Tasker Test Modify the taskCompleted status: POST - /save",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.post('/save')\n.send({\n    id: createId2,\n    taskDescription: des2,\n\t        taskDate: tdate2,\n    taskCompleted: true\n})\n.end(function(err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"taskCompleted\");\n    expect(res.body.taskCompleted).to.equal(true);\n    done();\n})",
              "err": {},
              "uuid": "f99e8e73-89c6-439e-8283-3c2df8f4ff16",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete completed task: DELETE - /clear",
              "fullTitle": "Tasker Test Delete completed task: DELETE - /clear",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.delete('/clear')\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    done();\n})",
              "err": {},
              "uuid": "07a1e943-9992-4302-9671-46e4207bd3d6",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the task has been deleted",
              "fullTitle": "Tasker Test Verify that the task has been deleted",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.get('/get/'+createId2)\n.end(function(err,res){\n    expect(res).to.have.status(400);\n    done();\n})",
              "err": {},
              "uuid": "c8057f9f-d635-411c-ae4b-2724cbd0d726",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clean up the data - set to completed",
              "fullTitle": "Tasker Test Clean up the data - set to completed",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.post('/save')\n.send({\n    id: createId,\n    taskDescription: des,\n\t        taskDate: tdate,\n    taskCompleted: true\n})\n.end(function(err, res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"taskCompleted\");\n    expect(res.body.taskCompleted).to.equal(true);\n    done();\n})",
              "err": {},
              "uuid": "c94f70d9-bfe4-42a2-8534-1d2a35dca167",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clean up the data - delete completed",
              "fullTitle": "Tasker Test Clean up the data - delete completed",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.delete('/clear')\n.end(function(err,res){\n    expect(err).to.be.null;\n    expect(res).to.have.status(200);\n    done();\n})",
              "err": {},
              "uuid": "5749b968-6ffa-4d85-85b0-788a563e0b49",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clean up the data - verify deletion",
              "fullTitle": "Tasker Test Clean up the data - verify deletion",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(baseUrl)\n.get('/get/'+createId)\n.end(function(err,res){\n    expect(res).to.have.status(400);\n    done();\n})",
              "err": {},
              "uuid": "c0f31074-efff-4423-8cdb-6f4b6c1bd854",
              "parentUUID": "33773cb2-2631-437b-8fb0-a24b453acb78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "930c75d5-9fef-413d-bba4-d7bff88ad6e3",
            "8c2e63e2-ce7a-4e14-85e8-9586ca9f3a28",
            "3249ac1b-adf6-41e2-a7ef-a49563303263",
            "db4c3507-da72-4ed6-a863-d45ffc77040f",
            "5c6c501f-2b04-4bc6-9870-05ea46defe39",
            "f99e8e73-89c6-439e-8283-3c2df8f4ff16",
            "07a1e943-9992-4302-9671-46e4207bd3d6",
            "c8057f9f-d635-411c-ae4b-2724cbd0d726",
            "c94f70d9-bfe4-42a2-8534-1d2a35dca167",
            "5749b968-6ffa-4d85-85b0-788a563e0b49",
            "c0f31074-efff-4423-8cdb-6f4b6c1bd854"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}